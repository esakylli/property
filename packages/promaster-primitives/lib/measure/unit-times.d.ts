import * as Unit from './unit';
import * as q from "./quantity";
export declare function lengthByLength(left: Unit.Unit<q.Length>, right: Unit.Unit<q.Length>): Unit.Unit<q.Area>;
export declare function areaByLength(left: Unit.Unit<q.Area>, right: Unit.Unit<q.Length>): Unit.Unit<q.Volume>;
export declare function durationByElectricCurrent(left: Unit.Unit<q.Duration>, right: Unit.Unit<q.ElectricCurrent>): Unit.Unit<q.ElectricCharge>;
export declare function massByAcceleration(left: Unit.Unit<q.Mass>, right: Unit.Unit<q.Acceleration>): Unit.Unit<q.Force>;
export declare function forceByLength(left: Unit.Unit<q.Force>, right: Unit.Unit<q.Length>): Unit.Unit<q.Energy>;
export declare function electricalPotentialByDuration(left: Unit.Unit<q.ElectricPotential>, right: Unit.Unit<q.Duration>): Unit.Unit<q.MagneticFlux>;
export declare function luminousIntensityBySolidAngle(left: Unit.Unit<q.LuminousIntensity>, right: Unit.Unit<q.SolidAngle>): Unit.Unit<q.LuminousFlux>;
export declare function massByArea(left: Unit.Unit<q.Mass>, right: Unit.Unit<q.Area>): Unit.Unit<q.MomentOfInertia>;
export declare function dimensionlessByDimensionless(left: Unit.Unit<q.Dimensionless>, right: Unit.Unit<q.Dimensionless>): Unit.Unit<q.SoundPressureLevel>;
export declare function specificEnthalpyByTemperature(left: Unit.Unit<q.SpecificEnthalpy>, right: Unit.Unit<q.Temperature>): Unit.Unit<q.SpecificHeatCapacity>;
export declare function powerByDuration(left: Unit.Unit<q.Power>, right: Unit.Unit<q.Duration>): Unit.Unit<q.Energy>;
